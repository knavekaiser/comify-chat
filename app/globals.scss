:root {
  --max-width: 1100px;
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, "Cascadia Mono", "Segoe UI Mono",
    "Roboto Mono", "Oxygen Mono", "Ubuntu Monospace", "Source Code Pro",
    "Fira Mono", "Droid Sans Mono", "Courier New", monospace;

  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --text-color-1: #083a5e;
  --text-color-2: #497696;

  --bg-1: white;
  --bg-2: #f2f8fd;

  // --primary-color-rgb: 63, 62, 237;
  --primary-color-rgb: 0, 180, 216;
  --comp-color-rgb: 216, 75, 0;
  --blue-color-rgb: 6, 119, 249;
  --green-color-rgb: 4, 218, 96;
  --red-color-rgb: 255, 0, 85;

  --hover-light-bg-color-rgb: 247, 247, 247;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  height: 100vh;
}

body {
  &:has(.body-min-1fr-min) {
    display: grid;
    grid-template-rows: min-content 1fr min-content;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--font-space-grotesk);
}

button {
  &.btn {
    padding: 11px 40px;
    font-size: 1rem;
    font-weight: 600;
    border-radius: 3rem;
    border: none;
    cursor: pointer;
    display: grid;
    align-items: center;
    &.large {
      width: 100%;
    }
    &.small {
      padding: 0;
    }
    &.secondary {
      background: white;
      // color: rgb(var(--primary-color-rgb));
      // box-shadow: inset 0 0 0 2px rgb(var(--primary-color-rgb));
      color: rgb(var(--comp-color-rgb));
      box-shadow: inset 0 0 0 2px rgb(var(--comp-color-rgb));
      &:hover {
        background: rgba(255, 255, 255, 0.9);
      }
      &:active {
        background: rgba(255, 255, 255, 0.8);
      }
    }
    &.primary {
      color: white;
      background: rgb(var(--comp-color-rgb));
      &:hover {
        background: rgba(var(--comp-color-rgb), 0.9);
      }
      &:active {
        background: rgba(var(--comp-color-rgb), 0.8);
      }
      &.white {
        background: white;
        color: rgb(var(--primary-color-rgb));
        &:hover {
          background: rgba(#fff, 0.9);
        }
        &:active {
          background: rgba(#fff, 0.8);
        }
      }
    }
    &.clear {
      color: rgb(var(--comp-color-rgb));
      background: none;
      &.white {
        color: white;
      }
      &:hover {
        opacity: 0.8;
      }
      &:active {
        opacity: 0.7;
      }
      &.grey {
        color: grey;
      }
    }
    &:disabled {
      pointer-events: none;
      cursor: default;
      opacity: 0.5;
    }
  }
}
button.btn.carousel_btn {
  z-index: 10;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.719);
  height: 100%;
  border-radius: 0;
  font-size: 1.5rem;
  color: var(--text-color-2);
  padding: 1rem;
  &.right {
    right: 0;
  }
  &.left {
    left: 0;
  }
}

li {
  list-style: none;
}

a {
  color: rgb(var(--primary-color-rgb));
  text-decoration: none;
  &:not(:has(button)) {
    &:hover {
      text-decoration: underline;
    }
  }
}

#portal,
#prompt {
  position: fixed;
  height: calc((var(--vh) * 100));
  width: 100%;
  top: 0;
  left: 0;
  z-index: 1000;
  display: grid;
  place-items: center;
  margin: auto;
  pointer-events: none;
  max-height: calc((var(--vh) * 100));
  & > * {
    pointer-events: all;
    grid-column: 1/2;
    grid-row: 1/2;
  }
}

.modalBackdrop {
  height: 100%;
  width: 100%;
  background: rgba(0, 0, 0, 0.7);
  pointer-events: all;
}
.modal {
  pointer-events: all;
  z-index: 10;
  background: white;
  max-height: calc((var(--vh) * 100) - 2rem);
  max-width: calc(100vw - 2rem);
  & ~ .modalBackdrop {
    z-index: 10;
    & ~ .modal {
      z-index: 10;
    }
  }
  position: relative;
  border-radius: 1rem;
  display: grid;
  overflow: auto;
  top: auto;
  left: auto;
  height: max-content;
  width: max-content;
  &.withHead {
    overflow: hidden;
    & > *:nth-child(2) {
      overflow: auto;
      max-height: calc((var(--vh) * 100) - (3rem + 36px));
      // max-width: calc(100vw - 3rem);
    }
  }
  .head {
    border-radius: 0.5rem 0.5rem 0 0;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
    font-weight: 500;
    padding: 0.15rem 1rem;
    padding-top: calc(0.15rem + 8px);
    padding-right: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: var(--text-color-1);
    position: relative;
    &::before {
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 8px;
      background: rgb(var(--primary-color-rgb));
      top: 0;
      left: 0;
    }
    button {
      color: var(--text-color-1);
      font-size: 1.5rem;
      padding: 0.5rem;
    }
  }
}

.promptBackdrop {
  height: calc((var(--vh) * 100));
  width: 100vw;
  background: rgba(0, 0, 0, 0.5);
}
.prompt {
  background: white;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);
  padding: 2rem;
  border-radius: 0.5rem;
  position: relative;
  text-align: center;
  width: 100%;
  max-width: 25rem;
  .close {
    position: absolute;
    right: 10px;
    top: 10px;
    font-size: 2rem;
    color: #4f4f4f;
  }
  .content {
    display: grid;
    grid-gap: 1.3rem;
    .label {
      display: grid;
      justify-content: center;
      margin-bottom: -1rem;
      .svg {
        font-size: 3.75rem;
        font-weight: bold;
      }
      .promptLabel {
        font-size: 1.5rem;
        line-height: 0.5em;
      }
      &.confirmation {
        color: rgb(254, 183, 0);
      }
      &.information {
        color: rgb(var(--blue-color-rgb));
      }
      &.success {
        color: rgb(var(--green-color-rgb));
      }
      &._error {
        color: rgb(var(--red-color-rgb));
      }
    }
    p {
      overflow-wrap: anywhere;
      color: rgba(0, 0, 0, 0.9);
      line-height: 1.6em;
    }
    .actions {
      justify-content: center;
      display: flex;
      grid-gap: 0.7rem;
      .no {
        filter: saturate(0);
        opacity: 0.7;
      }
    }
  }
}

.center {
  text-align: center !important;
}

dialog {
  z-index: 300;
  & ~ dialog {
    z-index: 300;
  }
}

.tableActions {
  display: grid;
  margin: 0 !important;
  & > span {
    margin: auto;
    button {
      padding: 0.4rem !important;
      color: var(--text-color-2) !important;
    }
  }
}

form {
  & > .actions {
    display: flex;
    justify-content: flex-end;
    grid-gap: 1rem;
  }
}

@media only screen and (max-width: 480px) {
  .modal {
    max-height: calc((var(--vh) * 100));
    max-width: 100vw;
    &.withHead {
      & > div:nth-child(2) {
        overflow: auto;
        max-height: calc((var(--vh) * 100 - 44px));
        max-width: 100vw;
      }
    }
  }
}

@media (hover: hover) {
  ::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    background-color: rgba(rgba(255, 255, 255, 0), 0.2);
    // border-radius: 1rem;
  }
  ::-webkit-scrollbar-thumb {
    background-color: rgb(var(--primary-color-rgb), 0.5);
    // border-radius: 1rem;
  }
}

#pageProgress {
  top: 0;
  height: 4px;
  width: 100%;
  position: fixed;
  z-index: 1000;
  background: linear-gradient(97deg, #ff0081, #ffca00, #00ff91, #00ff14);
  background-size: 300% 300%;
  animation: AnimationName 2s linear infinite;
  transition: transform 0.2s linear;
  transform-origin: top;
}

@-webkit-keyframes AnimationName {
  0% {
    background-position: 0% 45%;
  }
  50% {
    background-position: 100% 56%;
  }
  100% {
    background-position: 0% 45%;
  }
}
@-moz-keyframes AnimationName {
  0% {
    background-position: 0% 45%;
  }
  50% {
    background-position: 100% 56%;
  }
  100% {
    background-position: 0% 45%;
  }
}
@keyframes AnimationName {
  0% {
    background-position: 0% 45%;
  }
  50% {
    background-position: 100% 56%;
  }
  100% {
    background-position: 0% 45%;
  }
}

.ellepsis {
  overflow: hidden !important;
  text-overflow: ellipsis;
  word-break: break-word;
  -webkit-box-orient: vertical;
  display: -webkit-box !important;
  -webkit-line-clamp: 1;
  &.line-2 {
    -webkit-line-clamp: 2;
  }
}

.react-multi-carousel-list {
  &:hover {
    .react-multiple-carousel__arrow {
      opacity: 0.3;
    }
  }
}
.react-multi-carousel-list {
  .react-multiple-carousel__arrow {
    opacity: 0;
  }
}
.react-multiple-carousel__arrow--left {
  left: 2rem;
}
.react-multiple-carousel__arrow--right {
  right: 2rem;
}

.react-multi-carousel-dot-list {
  li {
    button {
      border: none;
      background: rgb(var(--primary-color-rgb), 0.2) !important;
      height: 8px;
      width: 8px;
      border-radius: 4px;
    }
    &.react-multi-carousel-dot--active {
      button {
        width: 18px;
        border: none;
        background: rgb(var(--primary-color-rgb), 0.7) !important;
      }
    }
  }
}

.rdrDateRangePickerWrapper {
  width: 100%;
  .rdrDefinedRangesWrapper {
    display: none;
  }
  .rdrCalendarWrapper {
    width: 100%;
    .rdrDateDisplayWrapper {
      width: 100%;
      .rdrDateDisplayItemActive {
        color: rgb(var(--primary-color-rgb));
      }
    }
    .rdrDays {
      button {
        z-index: 1;
        .rdrStartEdge,
        .rdrInRange,
        .rdrEndEdge {
          color: rgb(var(--primary-color-rgb)) !important;
        }
        .rdrDayStartPreview,
        .rdrDayInPreview,
        .rdrDayEndPreview {
          border-color: rgb(var(--primary-color-rgb)) !important;
        }
        &.rdrDayToday {
          span::after {
            background: rgb(var(--primary-color-rgb));
          }
        }
      }
    }
    &.multiple {
      .rdrDays {
        button {
          .rdrStartEdge,
          .rdrInRange,
          .rdrEndEdge {
            color: rgb(var(--orange-color-rgb)) !important;
          }
          .rdrDayStartPreview,
          .rdrDayInPreview,
          .rdrDayEndPreview {
            border-color: rgb(var(--orange-color-rgb)) !important;
          }
        }
      }
    }
    .rdrMonthAndYearWrapper {
      width: 100%;
    }
    .rdrMonths {
      width: 100%;
      .rdrMonth {
        width: 100%;
      }
    }
  }
}

.reactSelect {
  width: 100%;
  .reactSelect__control {
    display: flex;
    height: min-content;
    background: white;
    border-radius: 0.5rem;
    .reactSelect__value-container {
      padding: 0.75rem;
    }
    .reactSelect__single-value,
    .reactSelect__input-container {
      align-items: center;
      max-height: 24px;
      padding: 0 !important;
      margin: 0;
      grid-column: 1/2;
      grid-row: 1/2;
      font-size: 13.5px !important;
      color: black !important;
      min-width: 10rem;
    }
    .reactSelect__indicators {
      .reactSelect__indicator {
        color: var(--text-color-2);
        padding: 6px 0.5rem;
      }
    }
    .reactSelect__placeholder {
      font-size: 13px;
    }
    .reactSelect__indicator-separator {
      display: none;
    }
    .reactSelect__menu {
      .react-select__menu-list {
        box-shadow: none;
        .react-select__option {
          padding: 10px;
        }
      }
    }
  }
  &.hideMultipleValue {
    .reactSelect__clear-indicator,
    .reactSelect__multi-value {
      display: none;
    }
  }
  &.readOnly {
    pointer-events: none;
    .reactSelect__control {
      background: #f5f4f4;
    }
  }
}
.reactSelect__menu-portal {
  .reactSelect__menu-list {
    .reactSelect__option {
      padding: 1rem;
    }
  }
}
